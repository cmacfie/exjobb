1
Interviewer:
Okay so today's the 6th of September

2
Interviewee - Software Engineer:
December

3
Interviewer:
December, sorry! And we're at the Qlik's offices. And this is Christoffer MacFie talking. And I'm here with...

4
Interviewee - Software Engineer:
[DEDUCTED]

5
Interviewer:
And you work here at the Qlik?

6
Interviewee - Software Engineer:
Yeah I work at Qlik as a software engineer.

7
Interviewer:
Mm! Ehm... So I have some questions for you regarding... We're gonna to talk about API related stuff

8
Interviewee - Software Engineer:
Mm.

9
Interviewer:
And we're gonna; gonna talk a little bit about release notes and we kind of talked a little bit about online communities around software platforms. And you looked at some material beforehand.

10
Interviewee - Software Engineer:
Yeah.

11
Interviewer:
So if we start with API related things...

12
Interviewee - Software Engineer:
Okay

13 - AA1
Interviewer:
Ehm... So... When you're looking at... How important would you say that API examples and documentation is for a software platform?

14 - AA1
Interviewee - Software Engineer:
 Probably one of the most important things when it comes to documentation because I would say most; for most people that's the first thing you look at.

15
Interviewer:
Mm!

16 - AA1
Interviewee - Software Engineer:
Because if it's an API you're not familiar with the examples are the... ehm... the way you actually want to get familiar with how things are working...

17
Interviewer:
Mm!

18 - AA1
Interviewee - Software Engineer:
So... Very important.

19 - AC1
Interviewer:
So when you look at API examples, what are you trying to... ehm... what are you looking for like when you look up API examples what is it what is it you want to find out?

20 - AC1
Interviewee - Software Engineer:
Ehm.. I don't know I guess it depends on what I'm looking for sometimes it can be if I'm looking at a specific method I want to be able to find that quickly

21
Interviewer:
Mm!

22 - AC1
Interviewee - Software Engineer:
And to have an example of how that thing works in specific way. Ehm... And I guess it should be clear examples, consistent examples and... Yeah I don't know.

23
Interviewer:
Mm. Would you...

24 - AC1 - AC2
Interviewee - Software Engineer:
And; and also that there's some explanation, not just code

25
Interviewer:
Mm.

26 - AC1 - AC2
Interviewee - Software Engineer:
But also explanation about what that code does

27
Interviewer:
Mm.

28 - AC1 - AC2
Interviewee - Software Engineer:
Ehm... yeah some kind of documentation about the methods, and what they do, and... how they should behave.

29
Interviewer:
Mm.

30
Interviewee - Software Engineer:
Mm.

31 - AC1
Interviewer:
So is it; would you; it's more of a... so it's a mixture of trying to understand how they are used and where they were used? Or...

32 - AC1
Interviewee - Software Engineer:
Yeah! Yeah, of course.

33 - AC1
Interviewer:
And copy paste in code, is that something that is good for code examples as well or just to...

34 - AC1
Interviewee - Software Engineer:
Eh, what do you mean for; you mean for the developer to be able to just copy paste and try something out?

35
Interviewer:
Mm.

36 - AC1 - AC2
Interviewee - Software Engineer:
Ehm... I think it's good if you can get like; if you can try something out quickly... just to see that that's what you're... that it works I guess? Ehm... But it doesn't need to be a complete example in which, you know... Everything is done for you.

37 - AC1 - AC2
Interviewer:
Mm. It's more important of a concise example with just what they're trying to explain...

38
Interviewee - Software Engineer:
Mm.

39 - AC1 - AC2
Interviewer:
Rather than a big one?

40 - AC1 - AC2
Interviewee - Software Engineer:
Yeah I think it's good to have... It really depends on the case. Sometimes it's nice to have both.

41
Interviewer:
Mm.

42 - AC2
Interviewee - Software Engineer:
Like to use that example in the context of something bigger.

43
Interviewer:
Mm.

44 - AC2
Interviewee - Software Engineer:
Ehm... But it it really depends on the method: if it's something; something as simple as... you know, you need to do a copy paste, then it's enough to just focus on that simple method: how to do a copy paste with this API.

45
Interviewer:
Okay

46 - AC2
Interviewee - Software Engineer:
Ehm... Because it doesn't really have a lot of dependencies on other things.

47
Interviewer:
Mm.

48 - AC2
Interviewee - Software Engineer:
So I think it really depends... When it comes to; it's not really API is but in Qlik, when it comes to... the scripting language when you developed apps and things... for example there it's nice to have examples that are within a bigger context.

49
Interviewer:
Mm.

50 - AC2
Interviewee - Software Engineer:
Ehm... So yeah, it kind of depends. But I would if I have to choose then it would be; it would be more concise examples that just show you: okay this is what I wanted to know and I don't have to go searching like a pile of examples.

51 - AC2
Interviewer:
So you said... In the context of Qlik it's better to have a bigger example. When is it not... When... In what context is better to have a smaller example than... It's like... What makes Qlik, ehm... need bigger;

52 - AC2
Interviewee - Software Engineer:
Yeah, yeah. So in this sense it wasn't Qlik as everything related to Qlik. It was specifically because, yeah... I always complain, and other people I think always complain, with the documentation regarding the app development and scripting...

53
Interviewer:
Mm.

54 - AC2
Interviewee - Software Engineer:
And in that case you need more knowledge before you can jump into a specific...

55
Interviewer:
Mm.

56 - AC2
Interviewee - Software Engineer:
...method. So there you kind of; it's important to have more step-by-step things.

57 - AC2
Interviewer:
Okay, so... because it's more advanced we need, ehm...

58 - AC2
Interviewee - Software Engineer:
Yeah... Yeah because you can't just; You need some prerequisite knowledge in order to get to that...

59
Interviewer:
Okay.

60 - AC2
Interviewee - Software Engineer:
So I think in every documentation it's important if you know that you need some... some prerequisite knowledge...

61
Interviewer:
Mm.

62 - AC2
Interviewee - Software Engineer:
...that it's not maybe very common that it's nice to have those examples as well.

63
Interviewer:
Okay.

64 - AC2
Interviewee - Software Engineer:
Or at least some links or references to where can you learn about that.

65
Interviewer:
Mm.

66 - AC2
Interviewee - Software Engineer:
Because it's; yeah it can be quite annoying when you get; start reading an explanation and then there's ten; ten things you don't even know what they mean

67
Interviewer:
Mm.

68 - AC2
Interviewee - Software Engineer:
And it's nowhere explained...

69
Interviewer:
Okay.

70
Interviewee - Software Engineer:
So yeah...

71 - AC3
Interviewer:
Ehm... So how does it affect you if you're, ehm, looking at API examples and they're... not very good. How does that affect your work?

72 - AC3
Interviewee - Software Engineer:
Ehm... Well, if I have a choice to find something else to use then I would just... do that.

73
Interviewer:
Mm.

74 - AC3
Interviewee - Software Engineer:
Ehm... If I don't have a choice... well usually you have a choice, I mean... Usually you can choose between different... different options of... which API used to go; go to do... to do the same thing. Ehm... So in that case if you select one thing and then you see the documentation is bad, usually you just scrape it and turn to something different.

75
Interviewer:
Mm.

76 - AC3
Interviewee - Software Engineer:
Ehm... had a situation like that recently.

77
Interviewer:
Mm.

78 - AC3
Interviewee - Software Engineer:
When we started and that we actually implemented stuff using this... I forgot how it's called... doesn't really matter. But we had written code and everything and... yeah it was all the working examples but more and more we were working with it we realized the documentation is really lacking...

79
Interviewer:
Mm.

80 - AC3
Interviewee - Software Engineer:
...and it was difficult once you get into problems to fix them... So we actually just scraped that and started all over again with a different...

81
Interviewer:
Mm.

82 - AC3
Interviewee - Software Engineer:
So, with a different solution. So, yeah... it; it; it definitely affects the developer in a... in a bad way.

83 - AC1
Interviewer:
Ehm... So looking at the material, is there anything that you saw that... Okay this is very important or this is not important, or is there some key aspects that you're missing here that you usually look at...

84 - AC1
Interviewee - Software Engineer:
Ehm.. it was a lot of pictures!

85
Interviewer:
Yeah!

86 - AC1
Interviewee - Software Engineer:
But yeah, it's definitely good that there is some; there were some examples of how to do... well in this case, yeah... ehm... very basic example, like the; this is how you get started. That's nice! And then some example of, okay this is one step more...

87
Interviewer:
Mm.

88 - AC1
Interviewee - Software Engineer:
...a bit more advanced. So I think that's a nice way to present it, to have like a... the very basic one and then to go into... this is how you can modify things.

89
Interviewer:
Mm.

90 - AC1 - AB1
Interviewee - Software Engineer:
So I definitely like that. Ehm... and yeah, I like that you have in the meta descriptions, that you have listed like the parameters and their types and description. That's always helpful.

91
Interviewer:
Mm.

92
Interviewee - Software Engineer:
Ehm...

93 - AC1 - AB1
Interviewer:
So is that something that is something that should always exist, or is it some kind of like a bonus? "This is good if it exists"?

94 - AC1 - AB1
Interviewee - Software Engineer:
I would say it's something that should always exist.

95
Interviewer:
Mm.

96 - AC1 - AB1
Interviewee - Software Engineer:
So, I mean... It seems like a very basic, ehm... basic description to have. Like when you want to use the method you want to know which parameters it has, what type they can be... and yeah, what do they actually do.

97
Interviewer:
Mm.

98 - AC1 - AB1
Interviewee - Software Engineer:
So for me that's kind of a must. Examples as well! Like always... Ehm... Yeah, the... the release notes... that's always good to have.

99
Interviewer:
Mm.

100 - AC1 - AB1
Interviewee - Software Engineer:
...just to make sure you're not using something that... doesn't work anymore or will be deprecated once you upgrade.

101
Interviewer:
Mm.

102
Interviewee - Software Engineer:
So yeah.

103 - AD1
Interviewer:
I'll come to that later... ehm...  So another thing about, you've touched upon this a bit, to have working code quickly.

104
Interviewee - Software Engineer:
Mm.

105 - AD1
Interviewer:
Is that something that is important to you?

106 - AD1
Interviewee - Software Engineer:
Ehm... I think it's nice to have working code quickly... To have some kind of a basic example quickly.

107
Interviewer:
Mm.

108 - AD1
Interviewee - Software Engineer:
But then once, of course, it would usually need more work and more time when you want to have something more advanced.

109
Interviewer:
Mm.

110 - AD1 - AB1
Interviewee - Software Engineer:
But it's nice to be able to say: "Okay, this is how I can at least get the setup part done".

111
Interviewer:
Mm.

112 - AD1
Interviewee - Software Engineer:
And I can see that I get something out. So, you don't have to spend a day and then, "oh this this doesn't work at all".

113
Interviewer:
Yeah.

114 - AD1
Interviewee - Software Engineer:
So I think having some kind of a... a basic working example, it's important.

115 - AD2
Interviewer:
So in what situation are you willing to accept not having working code quickly, is it always needed to have just the... getting basics... "okay this is rendering", ehm... and then go more advanced, or you wait for a long time...

116 - AD2
Interviewee - Software Engineer:
I guess if I... if I know that it's something that definitely works, that it doesn't matter... I don't; I don't need to be the one testing it.

117
Interviewer:
Mm.

118 - AD2
Interviewee - Software Engineer:
...so it's something that's, eh... how do you say, ehm... it's kind of a standard. You know people are using this and it works, I'm not gonna run into some trouble where: "oh this is very experimental".

119
Interviewer:
Mm.

120 - AD2
Interviewee - Software Engineer:
That someone wrote and... yeah I need to be the one testing it. So I guess in that case it doesn't really have to be, ehm... a quick working example.

121
Interviewer:
Mm.

122 - AD2
Interviewee - Software Engineer:
Because I'm already aware; okay maybe there is even a community around the... the solution so...

123
Interviewer:
Mm.

124 - AD2
Interviewee - Software Engineer:
Yeah. Maybe that's... That's one reason.

125 - AB2 - AD2
Interviewer:
But you, ehm... You said that early that he scraped and started over because of the documentation being poor.

126 - AB2 - AD2
Interviewee - Software Engineer:
Yeah.

127 - AB2 - AD2
Interviewer:
Ehm... So that was more... You work is with something new, then...

128
Interviewee - Software Engineer:
Mm...

129 - AB2 - AD2
Interviewer:
Did you have start; ehm... Was working code a issue there, ehm... or just that you saw that this wasn't scalable if this documentation is poor?

130 - AB2 - AD2 - AD3
Interviewee - Software Engineer:
Yeah it's; so exactly it was, ehm...  It was; You could get a quick working example and that's quick; in that case quickly.

131
Interviewer:
Mm.

132 - AB2 - AD2
Interviewee - Software Engineer:
And you could do the basic things quickly and it worked well. But after a while every time you ran into a problem and you wanted to fix it and you look into the documentation it's like: it doesn't say anything here.

133
Interviewer:
Okay.

134 - AB2
Interviewee - Software Engineer:
And if you try to google it it's, you know... maybe you'll find something, maybe you don't, so you're kind of left on your own.

135
Interviewer:
Mm.

136 - AB2
Interviewee - Software Engineer:
Which is not a very nice thing. Or something like that does; like the answer does exist in the documentation but you need to search for it for half an hour because it's not ordered in a correct way or it's very inconsistent or I don't know...

137
Interviewer:
Mm.

138 - AB2
Interviewee - Software Engineer:
So after... Kind of... How do you say? After having the same problem multiple times...

139
Interviewer:
Mm.

140 - AB2
Interviewee - Software Engineer:
...then we realized: "Okay, if this continues happening you just keep losing time, every time you want to fix something". So we kind of scraped it and did an investigation: "Okay what are our other options?". And in this case, let's try to look at the documentation straight away and see if all of the problems we had with the older one are now gonna be fixed.

141
Interviewer:
Mm.

142
Interviewee - Software Engineer:
So yeah.

143 - AD3
Interviewer:
So would you say that... working code quickly is, ehm... if the documentation is good and the API examples are good, will you always have working code quickly? Are those linked?

144 - AD3
Interviewee - Software Engineer:
Eh... Yeah! They're definitely linked. The better the documentation is the easier it will be for you to get; get up and running.

145
Interviewer:
Mm.

146 - AD3
Interviewee - Software Engineer:
I mean...

147 - AD3 - AB2
Interviewer:
But obviously, as you said, then the other way around doesn't work. Having working code quickly it doesn't mean that the documentation will be good?

148 - AD3 - AB2
Interviewee - Software Engineer:
Yeah. Yeah in that case it doesn't so link. So... Yeah it kind of... The good documentation brings a lot of good things with it as well. And the bad documentation will bring a lot of bad things with it.

149
Interviewer:
Mm.

150 - AB2 - AD3
Interviewee - Software Engineer:
Ehm... But yeah. I guess even in bad documentation it's, ehm... it's possible to have, ehm... basic examples.

151
Interviewer:
Mm.

152 - AB2 - AD3
Interviewee - Software Engineer:
But then once you get into the more advanced stuff, then it fails you.

153
Interviewer:
Mm.

154
Interviewee - Software Engineer:
So...

155 - AB2 - AA1
Interviewer:
So the documentation it's a very key part of... it effects everything?

156 - AB2 - AA1
Interviewee - Software Engineer:
Yeah, yeah yeah. Definitely.

157
Interviewer:
Okay! So if we move over more to talk about release notes.

158
Interviewee - Software Engineer:
Mm.

159 - BA1
Interviewer:
In general, how often would you say that you look at release notes?

160 - BA1
Interviewee - Software Engineer:
Ehm... Not very often really, ehm... But it's usually not me who and; who has to decide between like which software we are using or which solutions, which api's so... I guess it's not so often that I; that I look at it because of that, ehm...

161
Interviewer:
So...

162 - BA1
Interviewee - Software Engineer:
But yeah but I think it's still; it's still important to be able to find release notes.

163
Interviewer:
Mm.

164 - BA1 - BA2
Interviewee - Software Engineer:
Because eventually you will want to like; you want to upgrade.

165
Interviewer:
Mm.

166 - BA2 - BA3
Interviewee - Software Engineer:
Whatever software you're using. And in that case, if you don't have documentation you can easily run into trouble.

167
Interviewer:
Mm.

168
Interviewee - Software Engineer:
If you don't have release notes...

169 - BA2 - BA3
Interviewer:
So... When you end up looking at release notes, under what circumstances, since you're not as you said the decider to upgrade... when you look at them why; how come you do that?

170 BA1 - BA2 - BA3
Interviewee - Software Engineer:
I don't know if I've ever looked at release notes...

171
Interviewer:
[friendly laughter]

172 - BA1 - BA2
Interviewee - Software Engineer:
It's really for when it comes to api's, ehm...

173 - BA1 - BA2
Interviewer:
Even not when if we take the context that you're working on something privately... at home, for example.

174 - BA1 - BA2
Interviewee - Software Engineer:
Yeah... I guess, yeah. If you... If you work on something privately and then, ehm... in that case it will make more sense to look at release notes, but at the same time if you look; if you're working on something privately that's like just a... it doesn't need to go into production...

175
Interviewer:
Mm.

176 - BA1 - BA2
Interviewee - Software Engineer:
...or something then you don't care too much about if you're using a deprecated method or not. Ehm... so yeah. But I think when it comes to, ehm... I mean I can talk about in the context of, ehm... Since our team is working with API governance and the entire work; kind of the entire... How you say... job, let's say job. Where the goal is to present the API changes and to make sure that the customers that are using Qlik API is know; what has what has changed between releases. Because, for them when they want to upgrade to a new version of Qlik Sense... That's very important.

177
Interviewer:
Mm.

178 - BA1 - BA2 - BB1
Interviewee - Software Engineer:
So, ehm... From from that perspective, looking at how; how much other people are interested in having us present that, then it seems like it's quite important. [laughter]

179 - BB1
Interviewer:
Yeah. So what is important to have in release notes?

180 - BB1
Interviewee - Software Engineer:
Ehm... I guess it's important to have, ehm... Enough details so that people are know; people know what; what has happened between releases.

181
Interviewer:
Mm.

182 - BB1 - BA3
Interviewee - Software Engineer:
Ehm... For us, we usually just; and I think most, they just present kind of what has... What has changed if you have new methods or new ways of doing things and... if you are supposed to avoid some methods.

183
Interviewer:
Mm.

184 - BB1 - BA3
Interviewee - Software Engineer:
That you were using before.

185 - BB2
Interviewer:
So in the material we have a very detailed release note and very non detailed.

186
Interviewee - Software Engineer:
Yeah.

187 - BB2
Interviewer:
Do you see any... ups or downs with either version.

188 - BB2
Interviewee - Software Engineer:
Ehm... Yes... Yeah, so here in the short release notes, when you have like the new/updated,  you don't really know what has changed. If one of these has been updated... So it doesn't say from... It doesn't say which one of these are completely new, which are updated and how they are updated. So that's something I; That would be my first question, like I don't know what has happened I just know something has changed, but it's what exactly? I have no idea. And then in the deprecated one, you see that four methods have been deprecated but then if you have the; if you have used these methods in your code it... doesn't say what you should do instead.

189
Interviewer:
Mm.

190 - BB2
Interviewee - Software Engineer:
So you're kind of left wondering: "Okay, how am I supposed to fix my code?"

191
Interviewer:
Mm.

192 - BB2
Interviewee - Software Engineer:
Ehm.. And I think this was fixed in the big change log... Yeah, you have a list of the deprecated methods and you specify what you should use instead, ehm... Yeah, even having the reasoning why you remove something, I think; I think that's nice, ehm... When you defecate it kind of builds, ehm... How you say... It builds trust.

193
Interviewer:
Mm.

194 - BB2
Interviewee - Software Engineer:
When you can explain why we did this change.

195 - BB2
Interviewer:
So, ehm... If we take the bigger version. Is it too detailed, is to like... it; or is it like how it should be, in quotations. You have any issues with that?

196 - BB2
Interviewee - Software Engineer:
Yeah, I didn't read through it completely, but... I think when it comes to release notes if you would choose between having not enough and too much it's better to have too much.

197
Interviewer:
Mm.

198 - BB2
Interviewee - Software Engineer:
Ehm... I mean if it's like a few pages or like a screen... You usually know what you want to look for so it's easy to find even if it's a big; big text. But down here... Yeah I think it's nice. It seems like I wouldn't have it... I wouldn't need to have it shorter than this.

199
Interviewer:
Mm.

200 - BB2
Interviewee - Software Engineer:
Yeah, having bugs and talking about when it was introduced... Yeah. I think it's good.

201 - BB4
Interviewer:
So, ehm... How, ehm... If there are; if the release notes are poorly written...

202
Interviewee - Software Engineer:
Mm.

203 - BB4
Interviewer:
How would it affect you?

204 - BB4
Interviewee - Software Engineer:
I think it's bad when it comes to... kind of the trust I mentioned between whoever is using the API and whoever is developing.

205
Interviewer:
Mm.

206 - BB4
Interviewee - Software Engineer:
Ehm... If it's a big company such as Qlik... I know it's always really big; it's a big deal in a bad way if; if you upgrade to a new version of Sense and all of a sudden things are not working.

207
Interviewer:
Mm.

208 - BB4
Interviewee - Software Engineer:
I think it reflects really poorly on the company, ehm... And yeah it's definitely a big deal.

209 - BB1
Interviewer:
Mm. Are there any other way of obtaining this kind of information than release notes, or is that the only... is that the go-to way of finding out this?

210 - BB1
Interviewee - Software Engineer:
Finding out kind of the changes between releases?

211 - BB1
Interviewer:
Yeah. Some companies, ehm... Take more care of release notes, and some don't.

212
Interviewee - Software Engineer:
Mm.

213 - BB1
Interviewer:
But, ehm... If you don't have good release notes... These companies still exist.

214
Interviewee - Software Engineer:
Mm.

215 - BB1
Interviewer:
Do they have some other way of presenting this or is it just that they have poor release notes?

216 - BB1
Interviewee - Software Engineer:
Yeah, I'm not sure what the other way would be? I guess depends on how you call it, but yeah there should be some way of finding out what has happened in between releases, I would say.

217
Interviewer:
Mm. So if we move over to, ehm... and talk about online communities instead.

218
Interviewee - Software Engineer:
Mm.

219 - CB1
Interviewer:
Ehm... [long pause].  So, yeah; How often do you take help from online communities when working.

220 - CB1
Interviewee - Software Engineer:
All the time.

221 - CB1
Interviewer:
All the time.

222 - CB1
Interviewee - Software Engineer:
Yeah.

223 - CC1
Interviewer:
So... So how important is it for you when you work with software that there there is an online community around it?

224 - CC1
Interviewee - Software Engineer:
Ehm... I think it's quite important because sometimes, even when you have a documentation that's average or even good, it's always nice to have online communities because you have then people that's run into the same issues as you do.

225
Interviewer:
Mm.

226 - CC1 - CA1
Interviewee - Software Engineer:
And I think it's enough to be in a community; it can be either on github like you have opened issues on the repository... something as small as that or just enough users that use the software so you get for example and Stack Overflow you can see issues of people using the same thing. It doesn't have to be like a specific, ehm... Site that's dedicated just to that product.

227
Interviewer:
Mm.

228 - CC1 - CA1
Interviewee - Software Engineer:
I think online; when it comes to online community it's like anywhere on the internet.

229
Interviewer:
Mm.

230 - CC1
Interviewee - Software Engineer:
But yeah. I think it's definitely important.

231 - CA2
Interviewer:
So even; so even if the documentation was flawless you'd still want a on my community around it?

232 - CA2
Interviewee - Software Engineer:
Yeah, I think it's still nice to have an online community. Because then you see that people are actually using...

233
Interviewer:
Mm.

234 - CA2
Interviewee - Software Engineer:
Using it. Like the documentation can be perfect but if no one is using this then why should I?

235 - CC1
Interviewer:
So is it, ehm... Important to feel like you are a part of a community?

236 - CC1
Interviewee - Software Engineer:
Ehm... Yeah! I would say so.

237 - CC1
Interviewer:
Ehm... So why is it important then? What happens if, ehm... You're working with a software that doesn't have an online community, how does that make you feel?

238 - CC1
Interviewee - Software Engineer:
I don't know. It seems like, as I said, like why am I the only one using this?

239
Interviewer:
Mm.

240 - CC1
Interviewee - Software Engineer:
That will be kind of my question. If I try to; if I find... I don't know, some software, some API or some product and I can't find anyone else using that thing I would; it would be like "okay there's something wrong about it. There's something that doesn't fit".

241
Interviewer:
Yeah.

242 - CC1
Interviewee - Software Engineer:
Ehm... So I think in in that sense, it's important to feel like: "Okay, there are other people using it, other people that maybe... have run into the same issues and have solved the same issues"... And you have someone also to turn to kind of when you run into problems, so...

243 - CC1
Interviewer:
So are there any; can you think of; if you try to think of communities you've encountered that you liked and encountered communities that you didn't like...

244
Interviewee - Software Engineer:
Mm.

245 - CC1
Interviewer:
What are the differences between these two communities?

246 - CC1
Interviewee - Software Engineer:
Ehm... Yeah, I'm not sure if I have  examples of communities that I didn't like you.

247
Interviewer:
Mm.

248
Interviewee - Software Engineer:
Ehm...

249 - CC1
Interviewer:
Can you think of things that are... when you come into a community that you feel like "ahh, I like this community!". Some aspects that that community had that you were like: "Okay, this is this is positive".

250 - CC1
Interviewee - Software Engineer:
Yeah... I'm not sure in the sense of... like working with api's. Because for me when I say... In that sense, it's not like a specific place you go to and you are talking only about... It's; it's just having people that are using it and it can be as I said on github or in Stack Overflow or, ehm... Yeah wherever.

251 - CC1
Interviewer:
It's important that it feels alive, the community?

252 - CC1
Interviewee - Software Engineer:
Yeah, yeah. That's for sure.

253 - CC1
Interviewer:
And is it, ehm... is it important that it feels helpful?

254 - CC1
Interviewee - Software Engineer:
Yeah. Yeah, I mean if, ehm... if you see that there are people; or there is some type of online community but there's either very little people or people that are not; not active in it then it's really not useful in the end.

255
Interviewer:
Mm.

256 - CC1
Interviewee - Software Engineer:
Ehm.. And yeah you to be able to engage with other people.

257 - CC1
Interviewer:
Ehm... Is it important that, ehm... the software; the company connected to the software that you're using.

258 - CC1
Interviewee - Software Engineer:
Mhm.

259 - CC1
Interviewer:
That they're part of the community?

260 - CC1
Interviewee - Software Engineer:
Yeah,  I think that's always good. I think it... I don't think it's necessary... that they are part of the community but I think it... it would make the... the consumer feel better about using the product, and feel... Yeah, again coming back to the trust and the relationship between the the product and the user.

261
Interviewer:
Mm.

262 - CC1
Interviewee - Software Engineer:
So, it's; it can't be a bad thing, I would say.

263 - CC2
Interviewer:
Okay. Ehm... So is there a difference if you're using something big, like a software platform, compared to something small like a library? Ehm... What you expect from an online community?

264 - CC2
Interviewee - Software Engineer:
Yeah, I think it's definitely; there's definitely a difference. I mean for; for something small like a library, you usually... Yeah you don't need the same level of interaction basically, and usually it's something that you will just, ehm... use a few times and don't think about it. But when it comes to the platform, it's probably something you interact with, ehm... Constantly.

265
Interviewer:
Mm.

266 - CC2
Interviewee - Software Engineer:
So you kind of want to have... Yeah then it's more important to have a bigger community, an online community, or even a separate space just for...

267
Interviewer:
Mm.

268 - CC2
Interviewee - Software Engineer:
Just for the platform itself. I'm...

269 - CC2
Interviewer:
...more important with, eh... The bigger it is, the more important?

270 - CC2
Interviewee - Software Engineer:
Yeah, yeah I would; I mean when it comes to a small library, basically if you find something on github... To me what I look at is that it's updated, it doesn't really need to have an online community around it as long as you see that it's still ongoing and that it's not dead when it comes to updates. So, yeah. It's, it's... The size matters.

271 - CC1
Interviewer:
Yeah. So, it; Like, overall... What is it that you want from an online community?

272 - CC1
Interviewee - Software Engineer:
Ehm... I guess I can think about it in terms of Qlik sense, and that type of community... But yeah I think I would like to have... Yeah activity and people interacting with each other and having questions and examples and... Yeah.

273
Interviewer:
Mm. Ehm... Is there anything we've.... You want to ask me, or something you thought about... That you thought I'd ask that yeah I haven't? Or something that you...

274
Interviewee - Software Engineer:
I don't know. Nothing that I can think about.

275
Interviewer:
Ehm... Then I think that I've got all the answers I need.

276
Interviewee - Software Engineer:
Okay, great.

277
Interviewer:
Thank you very much.

278
Interviewee - Software Engineer:
Thank you.